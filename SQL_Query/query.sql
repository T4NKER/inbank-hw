WITH PaymentsInEuro AS (
    SELECT 
        CASE
            WHEN c.CURRENCY_CODE = 'EUR' THEN p.AMOUNT
            ELSE p.AMOUNT * er.EXCHANGE_RATE_TO_EUR
        END AS AmountInEuro,
        p.TRANSACTION_DATE,
        p.USER_ID_SENDER
    FROM PAYMENTS p
        JOIN CURRENCIES c ON c.currency_id = p.currency
            AND (c.END_DATE IS NULL
                OR c.END_DATE >= p.TRANSACTION_DATE)
        LEFT JOIN CURRENCY_RATES er ON c.CURRENCY_ID = er.CURRENCY_ID
                AND er.EXCHANGE_DATE = p.TRANSACTION_DATE
)
SELECT ROUND(SUM(AmountInEuro), 2) AS "SUM(AMOUNT_EUR)",
    TRANSACTION_DATE
FROM PaymentsInEuro
    LEFT JOIN blacklist bl 
        ON USER_ID_SENDER = bl.USER_ID
            AND (bl.BLACKLIST_END_DATE IS NULL
                OR bl.BLACKLIST_END_DATE >= TRANSACTION_DATE)
WHERE bl.USER_ID IS NULL
GROUP BY TRANSACTION_DATE
ORDER BY TRANSACTION_DATE;